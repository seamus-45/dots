# statusbar colors
set-option -g window-status-style 'fg=colour245'
set-option -g window-status-current-style 'fg=colour255,bg=colour238'
set-option -g window-status-activity-style 'fg=colour220'
set-option -g window-status-bell-style 'fg=colour154'
set-option -g status-style 'fg=colour15,bg=colour235'
#
# status bar settings
set-window-option -g automatic-rename off
set-window-option -g allow-rename off
set-option -g status-position top
set-option -g window-status-separator ''
set-option -g window-status-format '  #I•#W  '
set-option -g window-status-current-format '#[bg=colour238]#[fg=colour235]#[default]#[bg=colour238] #I•#W #[bg=colour235]#[fg=colour238]'
set-option -g set-titles on
set-option -g set-titles-string '#S.#I.#P #W #T'
set-option -g status-left '#[bg=colour124]#[fg=colour229] #S.#I.#P #[default]#[fg=colour124]#[default]'
set-option -g status-left-length 60
#set-option -g status-right '#[fg=colour236] #[bg=colour236]#[fg=default] #P#F #[fg=colour238]#[fg=colour249]#[bg=colour238] #T#[fg=colour124] #[bg=colour124]#[fg=default] %F %R#{prefix_highlight}'
set-option -g status-right '#[fg=colour124] #[bg=colour124]#[fg=default] %R#{prefix_highlight}'
set-option -g status-right-length 120

# pane border
set-option -g pane-border-status 'off'
set-option -g pane-border-format '#P'
set-option -g pane-border-style 'fg=colour245'
set-option -g pane-active-border-style 'fg=colour208'

# pane number display
set-option -g display-panes-colour 'colour245'
set-option -g display-panes-active-colour 'colour208'

# message text
set-option -g message-style 'fg=colour208,bold'

# prefix highlight plugin
set -g @prefix_highlight_show_copy_mode 'on'
set -g @prefix_highlight_show_sync_mode 'on'
set -g @prefix_highlight_prefix_prompt ''
set -g @prefix_highlight_copy_prompt ''
set -g @prefix_highlight_sync_prompt ''
set -g @prefix_highlight_empty_prompt ' 󰣇 '
set -g @prefix_highlight_fg 'default,bold'
set -g @prefix_highlight_bg 'colour124'
set -g @prefix_highlight_copy_mode_attr 'fg=yellow,bg=colour124,bold'
set -g @prefix_highlight_sync_mode_attr 'fg=green,bg=colour124,bold'
set -g @prefix_highlight_empty_attr 'fg=default,bg=colour124,bold'

# clock
set-window-option -g clock-mode-colour colour208 #green

### undercurl example
# 24-bit colors
#set -g default-terminal "tmux-256color"
#set -sa terminal-features ",xterm-256color:RGB"
#set -ga terminal-overrides ",alacritty:RGB"

# Support undercurl
#set -sa terminal-overrides ',*:Smulx=\E[4::%p1%dm'
# Support colors for undercurl
#set -sa terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'

### USER SETTINGS
# tmux-256color instead of screen-256color enables italics
set -g default-terminal "tmux-256color"
#set -g default-terminal "screen-256color"

# Tc enables true color
set -ag terminal-overrides ",*256col*:colors=256:Tc"

# enable OSC 52 clipboard handling
set -as terminal-features ',*-256color:clipboard'

# enable OSC 52 clipboard
# https://medium.freecodecamp.org/tmux-in-practice-integration-with-system-clipboard-bcd72c62ff7b
set -g set-clipboard on

# use bracketed paste, if the running application (vim/emacs/weechat) has
# sent the terminal code to enable it.
bind-key ] paste-buffer -p

setw -g aggressive-resize on

# address vim mode switching delay (http://superuser.com/a/252717/65504)
set -s escape-time 0

# increase scrollback buffer size
set -g history-limit 50000

# tmux messages are displayed for 2 seconds
set -g display-time 2000

# bell settings
set-option -g bell-action none
set-option -g activity-action none
set-option -g visual-bell off
set-option -g monitor-bell off
set -g focus-events off

# misc settings
set-option -g history-limit 8192
set-option -g base-index 1
set-option -g renumber-windows on

# No delay for escape key press
set -sg escape-time 0

# mouse support
set-option -g mouse on

# enable activity alerts
set-window-option -g monitor-activity on
set-option -g visual-activity off

# vim mode
set-window-option -g mode-keys vi
set-option -g status-keys vi

### KEY BINDINGS
# tmux prefix key
set-option -g prefix M-`
bind-key M-` send-prefix

# unbind unnecessary keys
unbind-key C-b
unbind-key [
unbind-key ]
unbind-key M-Right
unbind-key M-Up
unbind-key M-Down
unbind-key M-Left
unbind-key M-p
unbind-key M-n
unbind-key Left
unbind-key Right
unbind-key Up
unbind-key Down
unbind-key z
unbind-key o
unbind-key c
unbind-key n
unbind-key f
unbind-key \;
unbind-key (
unbind-key )
unbind-key "'"
unbind-key &
unbind-key '"'
unbind-key "#"
unbind-key C-o
unbind-key C-?
unbind-key M-o

# Vim style split
bind-key v split-window -h
bind-key s split-window -v
bind-key j command-prompt -p "Join pane:" "join-pane -s '%%'"

# Vim style pane resizing
bind-key -r H resize-pane -L 5
bind-key -r J resize-pane -D 5
bind-key -r K resize-pane -U 5
bind-key -r L resize-pane -R 5

# zoom pane
bind-key z resize-pane -Z

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n M-h if-shell "$is_vim" "send-keys M-h"  "select-pane -L"
bind-key -n M-j if-shell "$is_vim" "send-keys M-j"  "select-pane -D"
bind-key -n M-k if-shell "$is_vim" "send-keys M-k"  "select-pane -U"
bind-key -n M-l if-shell "$is_vim" "send-keys M-l"  "select-pane -R"

# Shift arrow to switch windows
bind-key -n S-Left previous-window
bind-key -n S-Right next-window
bind-key -n S-M-Left swap-window -t -1
bind-key -n S-M-Right swap-window -t +1
bind-key -n S-Down new-window -c "$HOME"
bind-key -n S-Up command-prompt -I '#W' "rename-window '%%'"

# Alt -/= to switch windows
bind-key -n M-- previous-window
bind-key -n M-= next-window
bind-key -n M-_ swap-window -t -1
bind-key -n M-+ swap-window -t +1

# create/delete window
bind-key = new-window -c "$HOME"
bind-key - confirm-before -p "kill-window #W? (y/n)" kill-window

# Reload tmux config
bind-key r source-file ~/.config/tmux/tmux.conf \; display-message "tmux.conf reloaded"
bind-key c split-window -h "nvim ~/.config/tmux/tmux.conf"

# vim style copy/paste
bind-key Escape copy-mode
bind-key -T copy-mode-vi 'v' send-keys -X begin-selection
bind-key -T copy-mode-vi 'y' send-keys -X copy-selection
bind-key p paste-buffer
bind-key '\' choose-buffer
bind-key BSpace delete-buffer

# switch session
bind-key ` run-shell -b "~/.config/tmux/scripts/session-menu"

# extended session menu
bind-key -r '~' display-popup -w 40% -h 30% -E "~/.config/tmux/scripts/session-manager"

# confirm before detach client
bind-key d confirm-before -p "Detach client? (y/n)" detach-client

# select URL with tmux-url-select.pl
bind-key u run-shell '~/.config/tmux/scripts/url-select'

# open URL in tmux buffer in chrome
bind-key o run-shell 'tmux save-buffer - | tr -d "\012" | tr -d " " | xargs -I@ xdg-open "@" >/dev/null'

# search tmux buffer in chrome
bind-key g run-shell 'tmux save-buffer - | tr -d "\012" | xargs -0 -I@ xdg-open "http://google.ru/search?q=@" >/dev/null'

# copy tmux buffer to clipboard
bind-key y run-shell "tmux save-buffer - | xclip -selection clipboard >/dev/null"

# send tmux buffer to pastebin
#bind-key P run-shell "tmux save-buffer - | wgetpaste | awk '/:/ {print \$NF}' | xargs -I@ xdg-open \"@\" >/dev/null"
#bind-key P run-shell "tmux save-buffer - | sheetpaste.sh | xargs -I@ xdg-open \"@\" >/dev/null"

# easily toggle synchronization (mnemonic: e is for echo)
bind-key e setw synchronize-panes on
bind-key E setw synchronize-panes off

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set -g @plugin 'kenos1/tmux-cht-sh' # Invoke the cheatsheet:  prefix–S

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.config/tmux/plugins/tpm/tpm'
